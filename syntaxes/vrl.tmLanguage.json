{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Vector Remap Language",
	"scopeName": "source.vrl",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#function"
		},
		{
			"include": "#value"
		}
	],
	"repository": {
		"array": {
			"comment": "Array value",
			"name": "meta.structure.array.vrl",
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.array.begin.vrl"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.array.end.vrl"
				}
			},
			"patterns": [
				{
					"include": "#value"
				},
				{
					"comment": "Comma",
					"name": "punctuation.definition.separator.array.vrl",
					"match": ","
				},
				{
					"comment": "Illegal separator",
					"name": "invalid.illegal.array-separator.vrl",
					"match": "[^\\s\\]]"
				},
				{
					"comment": "Comment",
					"include": "#comment"
				}
			]
		},
		"boolean": {
			"comment": "Boolean value",
			"name": "constant.language.boolean.vrl",
			"match": "\\b(true|false)\\b"
		},
		"comment": {
			"comment": "Comment",
			"name": "comment",
			"match": "(\\s+)?#(.*)$"
		},
		"function": {
			"patterns": [
				{
					"comment": "Function",
					"name": "entity.name.function",
					"match": "(?<![.])\\b(append|decode_base64|decode_percent|encode_base64|encode_json|encode_key_value|encode_logfmt|now|push|etc)\\b"
				},
				{
					"comment": "Type function",
					"name": "storage.type.variable.vrl",
					"match": "(?<![.])\\b(array|is_array|bool|is_boolean|float|is_float|is_null|is_regex|string|is_string|timestamp|is_timestamp)\\b"
				}
			]
		},
		"null": {
			"comment": "Null value",
			"name": "constant.language.null.vrl",
			"match": "\\b(null)\\b"
		},
		"number": {
			"patterns": [
				{
					"include": "#plain-integer-or-float"
				}
			]
		},
		"object": {
			"comment": "Object value",
			"name": "meta.structure.dictionary.vrl",
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.dictionary.begin.vrl"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.dictionary.end.vrl"
				}
			},
			"patterns": [
				{
					"comment": "Object key",
					"include": "#object-key"
				},
				{
					"comment": "Object value",
					"include": "#object-value"
				},
				{
					"match": "[^\\s\\}]",
					"name": "invalid.illegal.expected-dictionary-separator.vrl"
				},
				{
					"comment": "Comment",
					"include": "#comment"
				}
			]
		},
		"object-key": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.support.type.property-name.begin.vrl"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.support.type.property-name.end.vrl"
				}
			},
			"patterns": [
				{
					"include": "#string-content"
				}
			]
		},
		"object-value": {
			"name": "meta.structure.dictionary.value.vrl",
			"begin": ":",
			"beginCaptures": {
				"0": {
					"name": "punctuation.separator.dictionary.key-value.vrl"
				}
			},
			"end": "(,)|(?=\\})",
			"endCaptures": {
				"1": {
					"name": "punctuation.separator.dictionary.pair.vrl"
				}
			},
			"patterns": [
				{
					"comment": "The value",
					"include": "#value"
				},
				{
					"match": "[^\\s,]",
					"name": "invalid.illegal.expected-dictionary-separator.vrl"
				}
			]
		},
		"plain-integer-or-float": {
			"comment": "Plain integer or float value",
			"name": "constant.numeric.vrl",
			"match": "([+-]?([0-9]*[.])?[0-9]+)"
		},
		"regex": {
			"patterns": [
				{
					"comment": "Single-quoted regex value",
					"name": "string.regexp.vrl",
					"begin": "r'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.regexp.begin.vrl"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.regexp.end.vrl"
						}
					}
				},
				{
					"comment": "Double-quoted regex value",
					"name": "string.regexp.vrl",
					"begin": "r\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.regexp.begin.vrl"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.regexp.end.vrl"
						}
					}
				}
			]
		},
		"string": {
			"patterns": [
				{
					"comment": "Single-quoted string value",
					"name": "string.quoted.single.vrl",
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.vrl"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.vrl"
						}
					},
					"patterns": [
						{
							"include": "#string-content"
						}
					]
				},
				{
					"comment": "Double-quoted string value",
					"name": "string.quoted.double.vrl",
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.vrl"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.vrl"
						}
					},
					"patterns": [
						{
							"include": "#string-content"
						}
					]
				},
				{
					"comment": "Single-quoted string literal value",
					"name": "string.quoted.double.vrl",
					"begin": "s'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.vrl"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.vrl"
						}
					},
					"patterns": [
						{
							"include": "#string-content"
						}
					]
				},
				{
					"comment": "Double-quoted string literal value",
					"name": "string.quoted.double.vrl",
					"begin": "s\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.vrl"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.vrl"
						}
					},
					"patterns": [
						{
							"include": "#string-content"
						}
					]
				}
			]
		},
		"string-content": {
			"patterns": [
				{
					"match": "(\\w+)",
					"name": "string.vrl"
				}
			]
		},
		"timestamp": {
			"patterns": [
				{
					"comment": "Single-quoted timestamp value",
					"name": "string.quoted.double.vrl",
					"begin": "t'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.vrl"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.vrl"
						}
					},
					"patterns": [
						{
							"include": "#string-content"
						}
					]
				},
				{
					"comment": "Double-quoted timestamp value",
					"name": "string.quoted.double.vrl",
					"begin": "t\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.vrl"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.vrl"
						}
					},
					"patterns": [
						{
							"include": "#string-content"
						}
					]
				}
			]
		},
		"value": {
			"patterns": [
				{
					"include": "#array"
				},
				{
					"include": "#boolean"
				},
				{
					"include": "#null"
				},
				{
					"include": "#number"
				},
				{
					"include": "#object"
				},
				{
					"include": "#regex"
				},
				{
					"include": "#string"
				},
				{
					"include": "#timestamp"
				}
			]
		}
	}
}